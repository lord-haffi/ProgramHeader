/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package program;

import java.io.File;
import java.util.ResourceBundle;
import java.util.logging.LogRecord;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author LeonWin
 */
public class ErrorReport extends javax.swing.JFrame {
    public static final int CANCEL = 0, SAVE = 1, SAVESEND = 2;
    private static final ResourceBundle bundle = ResourceBundle.getBundle("program/lan", Program.getLocale());
    private static int state = CANCEL;
    private static String selected;
    
    private String cause;
    private final Object[][] table;
    private final Object waiter;
    /**
     * Creates new form ErrorReport2
     */
    private ErrorReport(LogRecord[] lrs, int newest, int count, Object waiter) {
        //this.lrs = lrs;
        cause = lrs[newest].getMessage();
        Throwable th = lrs[newest].getThrown();
        if(th != null){
            cause += "\n"+th;
            for(StackTraceElement el : th.getStackTrace()){
                cause += "\n\tat "+el;
            }
        }
        this.waiter = waiter;
        table = new Object[count][4];
        int ind = newest;
        for(int i=0; i<count; i++){
            if(ind < 0) ind+=lrs.length;
            table[i][0] = lrs[ind].getMessage();
            table[i][1] = lrs[ind].getLevel().getName();
            table[i][2] = lrs[ind].getLoggerName();
            table[i][3] = lrs[ind].getMillis();
            ind--;
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaError = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableLog = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        textFieldReportFile = new javax.swing.JTextField();
        buttonBrowse = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        buttonCancel = new javax.swing.JButton();
        buttonSaveSend = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();

        setTitle(Program.getTitle()+" - "+bundle.getString("ERR"));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText(this.bundle.getString("GUIL1")); // NOI18N

        textAreaError.setColumns(20);
        textAreaError.setRows(5);
        textAreaError.setText(cause);
        jScrollPane1.setViewportView(textAreaError);

        jLabel2.setText(this.bundle.getString("GUIL2")); // NOI18N

        tableLog.setModel(new javax.swing.table.DefaultTableModel(table,
            new String[]{
                "Message", "Level", "Logger", "Time"
            }
        ){
            public Class getColumnClass(int columnIndex) {
                return String.class;
            }
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        jScrollPane2.setViewportView(tableLog);

        jLabel3.setText(this.bundle.getString("GUIL3")); // NOI18N

        textFieldReportFile.setEditable(false);
        String def = Program.getSetting("reportPath");
        selected = def == null ? "" : def;
        textFieldReportFile.setText(selected);

        buttonBrowse.setText("...");
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });

        jCheckBox1.setSelected(true);
        jCheckBox1.setText(this.bundle.getString("GUICB1")); // NOI18N

        buttonCancel.setText(this.bundle.getString("CANCEL")); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonSaveSend.setText(this.bundle.getString("SEND")); // NOI18N
        buttonSaveSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveSendActionPerformed(evt);
            }
        });

        buttonSave.setText(this.bundle.getString("SAVE")); // NOI18N
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldReportFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSaveSend, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textFieldReportFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonSaveSend)
                    .addComponent(buttonSave))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        close(CANCEL);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        close(CANCEL);
    }//GEN-LAST:event_formWindowClosing

    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileFilter xml = new FileFilter(){
            @Override
            public boolean accept(File file) {
                return file.isDirectory() || file.getAbsolutePath().endsWith(".xml");
            }

            @Override
            public String getDescription() {
                return ".xml";
            }
        };
        chooser.addChoosableFileFilter(xml);
        chooser.setFileFilter(xml);
        if(!textFieldReportFile.getText().equals(""))
            chooser.setSelectedFile(new File(textFieldReportFile.getText()));
        if(chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){
            if(!chooser.getSelectedFile().exists() ||
                    JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(this, bundle.getString("OVERWRITE"), Program.getTitle(), JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE)){
                textFieldReportFile.setText(chooser.getSelectedFile().getAbsolutePath());
                selected = chooser.getSelectedFile().getAbsolutePath();
            }
        }
    }//GEN-LAST:event_buttonBrowseActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        close(SAVE);
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonSaveSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveSendActionPerformed
        close(SAVESEND);
    }//GEN-LAST:event_buttonSaveSendActionPerformed

    public void close(int state){
        dispose();
        ErrorReport.state = state;
        selected = textFieldReportFile.getText();
        synchronized(waiter){
            waiter.notify();
        }
    }
    /*
     * @param args the command line arguments
     *
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ErrorReport().setVisible(true);
            }
        });
    }*/
    public static String getSelectedFile(){
        return selected;
    }
    public static synchronized int showErrorReport(LogRecord[] lrs, int newest, int count){
        Object waiter = new Object();
        new Runnable(){
            @Override
            public void run(){
                new ErrorReport(lrs, newest, count, waiter).setVisible(true);
            }
        }.run();
        try {
            synchronized(waiter){
                waiter.wait();
            }
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        return state;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowse;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonSaveSend;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tableLog;
    private javax.swing.JTextArea textAreaError;
    private javax.swing.JTextField textFieldReportFile;
    // End of variables declaration//GEN-END:variables
}
